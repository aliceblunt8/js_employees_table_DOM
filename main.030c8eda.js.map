{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","tBodies","createForm","form","createElement","classList","add","after","insertAdjacentHTML","addTableSorting","setAscending","lastClicked","tHead","addEventListener","event","th","target","sortTableByColumn","cellIndex","innerText","addRowSelecting","lastActive","tr","closest","remove","addDataAppending","activeForm","preventDefault","validateForm","addNewEmployee","reset","addTableEditing","td","initialValue","textContent","input","className","value","style","width","window","getComputedStyle","append","editTableCell","e","code","columnIndex","columnName","sortOrder","rows","sort","a","b","rowA","cells","rowB","replace","isNaN","localeCompare","Number","age","salary","pushNotification","toLocaleString","name","position","office","top","right","title","description","type","message","innerHTML","body","setTimeout","cell","cellValue"],"mappings":"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","file":"main.030c8eda.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.tBodies[0];\n\ncreateForm();\naddTableSorting();\naddRowSelecting();\naddDataAppending();\naddTableEditing();\n\nfunction createForm() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  table.after(form);\n\n  form.insertAdjacentHTML('afterbegin', `\n    <label>Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        minlength=\"4\"\n        required\n        >\n    </label>\n    <label>Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        minlength=\"4\"\n        required\n        >\n    </label>\n    <label for=\"office\">Office:\n      <select name=\"office\" id=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n     <label>Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        required\n        >\n    </label>\n    <label>Salary:\n      <input\n        name=\"salary\"\n        type=\"number\"\n        required\n        >\n    </label>\n    <button type=\"submit\">Save to table</button>\n`);\n}\n\nfunction addTableSorting() {\n  let setAscending = false;\n  let lastClicked = null;\n\n  table.tHead.addEventListener('click', (event) => {\n    const th = event.target;\n\n    setAscending = !setAscending;\n\n    if (lastClicked !== th) {\n      setAscending = true;\n    }\n\n    lastClicked = th;\n\n    sortTableByColumn(th.cellIndex, th.innerText, setAscending);\n  });\n}\n\nfunction addRowSelecting() {\n  let lastActive = null;\n\n  table.tBodies[0].addEventListener('click', (event) => {\n    const tr = event.target.closest('tr');\n\n    if (lastActive !== tr && lastActive !== null) {\n      lastActive.classList.remove('active');\n    }\n\n    lastActive = tr;\n\n    tr.classList.add('active');\n  });\n}\n\nfunction addDataAppending() {\n  const form = document.querySelector('form');\n\n  form.addEventListener('submit', (event) => {\n    const activeForm = event.target;\n\n    event.preventDefault();\n\n    if (!validateForm(activeForm)) {\n      return;\n    }\n\n    addNewEmployee(activeForm);\n    activeForm.reset();\n  });\n}\n\nfunction addTableEditing() {\n  tbody.addEventListener('dblclick', (event) => {\n    const td = event.target;\n    const initialValue = td.textContent;\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.value = initialValue;\n    input.style.width = window.getComputedStyle(td).width;\n\n    td.textContent = '';\n    td.append(input);\n\n    input.addEventListener('blur', () => {\n      editTableCell(td, input, initialValue);\n      input.remove();\n    });\n\n    input.addEventListener('keydown', (e) => {\n      if (e.code === 'Enter') {\n        editTableCell(td, input, initialValue);\n        input.remove();\n      }\n    });\n  });\n}\n\n// Helper functions\nfunction sortTableByColumn(columnIndex, columnName, sortOrder) {\n  const rows = [...tbody.rows];\n\n  rows.sort((a, b) => {\n    let rowA = a.cells[columnIndex].textContent;\n    let rowB = b.cells[columnIndex].textContent;\n\n    if (columnName === 'Salary') {\n      rowA = +rowA.replace(/[$,]/g, '');\n      rowB = +rowB.replace(/[$,]/g, '');\n    }\n\n    if (!sortOrder) {\n      return isNaN(+rowA)\n        ? rowB.localeCompare(rowA)\n        : Number(rowB) - Number(rowA);\n    }\n\n    return isNaN(+rowA)\n      ? rowA.localeCompare(rowB)\n      : Number(rowA) - Number(rowB);\n  });\n\n  tbody.append(...rows);\n}\n\nfunction validateForm(form) {\n  const age = form.age.value;\n  const salary = form.salary.value;\n\n  if (age < 18) {\n    pushNotification(440, 230, 'Error!',\n      'Employee\\'s age must be over 18!', 'error');\n\n    return false;\n  }\n\n  if (age > 90) {\n    pushNotification(440, 230, 'Error!',\n      'Employee\\'s age must be less than 90!', 'error');\n\n    return false;\n  }\n\n  if (salary < 50000) {\n    pushNotification(440, 230, 'Error!',\n      'Employee\\'s salary must be greater than $50,000!', 'error');\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction addNewEmployee(form) {\n  const salary = `$${(+form.salary.value).toLocaleString()}`;\n\n  tbody.insertAdjacentHTML('beforeend', `\n  <tr>\n    <td>${form.name.value}</td>\n    <td>${form.position.value}</td>\n    <td>${form.office.value}</td>\n    <td>${form.age.value}</td>\n    <td>${salary}</td>\n  </tr>\n  `);\n\n  pushNotification(440, 230, 'Success!',\n    'New employee was added to the table!', 'success');\n}\n\nfunction pushNotification(top, right, title, description, type) {\n  const message = document.createElement('div');\n\n  message.classList.add('notification');\n  message.classList.add(type);\n  message.style.top = top + 'px';\n  message.style.right = right + 'px';\n\n  message.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n    `;\n\n  document.body.append(message);\n\n  setTimeout(() => message.remove(), 2000);\n}\n\nfunction editTableCell(cell, input, cellValue) {\n  if (!input.value) {\n    cell.textContent = cellValue;\n\n    return;\n  }\n\n  cell.textContent = input.value;\n}\n"]}